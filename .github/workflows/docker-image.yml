name: Docker Image CI - X86_64 for Alpine Linux - Wget2 static upx

on:
  push:
    branches: [ "main" , "wget2-static-upx"]
  pull_request:
    branches: [ "main" , "wget2-static-upx"]
  workflow_dispatch:    

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Construye y extrae SOLO el artefacto final
      - name: Build image and extract artifact
        uses: docker/build-push-action@v5
        with:
          tags: builder:latest
          # Apunta al stage "export" que solo tiene el .tar.xz
          target: export
          outputs: type=local,dest=./output
          cache-from: type=gha
          cache-to: type=gha,mode=max

      #- name: Upload static program
       # uses: actions/upload-artifact@v4
        #with:
         # name: wget2-x86_64
          #path: ./output/*.tar.gz
          #retention-days: 7
      - name: Create Release and Upload Asset
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: ./output/*.tar.gz
          # Esto crea una release con un nombre basado en la fecha y hora.
          # Idealmente, querrías basarlo en un tag de git.
          tag_name: "latest-build-${{ github.sha }}" 
          body: "Compilación automática de wget2 a partir del commit ${{ github.sha }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
